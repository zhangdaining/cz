package net.shopxx.controller.admin;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import net.shopxx.Page;
import net.shopxx.Pageable;
import net.shopxx.entity.*;
import net.shopxx.exception.ResourceNotFoundException;
import net.shopxx.service.AttributeService;
import net.shopxx.service.BrandService;
import net.shopxx.service.GoodsService;
import net.shopxx.service.ProductCategoryService;
import net.shopxx.service.PromotionService;
import net.shopxx.service.SearchService;
import net.shopxx.service.TagService;

import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang.ArrayUtils;
import org.apache.commons.lang.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
/**
 * Created by Administrator on 2016/6/11.
 */
@Controller("apiController")
@RequestMapping("/api")
public class ApiController {
    public static final Integer MAX_COMPARE_GOODS_COUNT = 4;

    public static final Integer MAX_HISTORY_GOODS_COUNT = 10;

    @Resource(name = "goodsServiceImpl")
    private GoodsService goodsService;
    @Resource(name = "productCategoryServiceImpl")
    private ProductCategoryService productCategoryService;
    @Resource(name = "brandServiceImpl")
    private BrandService brandService;
    @Resource(name = "promotionServiceImpl")
    private PromotionService promotionService;
    @Resource(name = "tagServiceImpl")
    private TagService tagService;
    @Resource(name = "attributeServiceImpl")
    private AttributeService attributeService;
    @Resource(name = "searchServiceImpl")
    private SearchService searchService;



    @RequestMapping(value = "/search", method = RequestMethod.GET)
    public @ResponseBody Map search(String keyword, BigDecimal startPrice, BigDecimal endPrice, Goods.OrderType orderType, Integer pageNumber, Integer pageSize) {

        Map model=new HashMap();
        Pageable pageable = new Pageable(pageNumber, pageSize);
        model.put("orderTypes", Goods.OrderType.values());
        model.put("goodsKeyword", keyword);
        model.put("startPrice", startPrice);
        model.put("endPrice", endPrice);
        model.put("orderType", orderType);
        Page<Goods> goodsPage=searchService.search(keyword, startPrice, endPrice, orderType, pageable);
        List<Map> goodsList=new ArrayList<Map>();
        for(Goods goods:goodsPage.getContent()){
            Product defaultProduct=goods.getDefaultProduct();
            Map map=new HashMap();
            Map defaultProductMap=new HashMap();
            defaultProductMap.put("thumbnail",defaultProduct.getThumbnail());
            defaultProductMap.put("name",defaultProduct.getName());
            defaultProductMap.put("price",defaultProduct.getPrice());
            map.put("defaultProduct",defaultProductMap);
            map.put("id",goods.getId());
            map.put("hits",goods.getHits());
            map.put("stock",goods.getDefaultProduct().getStock());
            map.put("sales",goods.getSales());
            goodsList.add(map);
        }
        goodsPage=new Page(goodsList,goodsPage.getTotal(),goodsPage.getPageable());
        model.put("page", goodsPage);
       return model;
    }



    @RequestMapping(value = "/hits/{goodsId}", method = RequestMethod.GET)
    public @ResponseBody
    Long hits(@PathVariable Long goodsId) {
        if (goodsId == null) {
            return 0L;
        }
        return goodsService.viewHits(goodsId);
    }
}
